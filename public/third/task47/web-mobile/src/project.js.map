{"version":3,"sources":["resources/app.asar/node_modules/browser-pack/_prelude.js","Script/AStar.js","project.js","Script/game.js","Script/hero.js","Script/pos.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","AStar","module","createPos","c","Pos","getMinFIndex","arr","posEnd","index","F","G","getH","minF","getIndexOfPos","pos","isEqual","posStart","fnIsPosOK","arrOpen","arrClose","idxOfMinF","curPos","splice","push","arrResult","parent","unshift","arrNeighbors","getNeighbors","getG","cc","_RFpush","_RFpop","game","Class","extends","Component","properties","mainNode","Node","girdContainer","wallPre","Prefab","roadPre","hero","target","rowNum","colNum","arrIsWall","Boolean","onLoad","girdWidth","this","width","girdHeight","height","j","gird","Math","random","wallNum","instantiate","addChild","setPosition","p","randomR","randomC","floor","isWallHere","getComponent","isReachable","canReach","getPosition","onTouchEvent","row","col","onTouchStart","event","touch","onTouchMove","onTouchEnd","location","getLocation","convertToNodeSpace","onTouchCancel","node","on","offAllTouchEvent","off","update","dt","isOver","rectIntersectsRect","getBoundingBox","director","loadScene","getGirdPos","position","w","h","y","x","getCCPos","girdPos","goto","act","path","gPos","shift","self","runAction","sequence","moveTo","callFunc","stopAllActions","targetPos","startPos","console","log","prototype","left","right","top","bottom","leftTop","leftBottom","rightTop","rightBottom","dis1","abs","dis2","dis","sqrt","round","toString","first_argument"],"mappings":"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","file":"project.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\ncc._RFpush(module, '12ea8rLR19JoZjtDkt63E+v', 'AStar');\n// Script\\AStar.js\n\nvar Pos = require('pos');\n\nfunction createPos(r, c) {\n    return new Pos(r, c);\n}\n\nfunction getMinFIndex(arr, posEnd) {\n    var index = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var F = arr[i].G + arr[i].getH(posEnd);\n        var minF = arr[index].G + arr[index].getH(posEnd);\n        if (F <= minF) {\n            index = i;\n        }\n    }\n\n    return index;\n}\n\nfunction getIndexOfPos(arr, pos) {\n    for (var i = 0; i < arr.length; i++) {\n        if (pos.isEqual(arr[i])) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nfunction AStar(posStart, posEnd, fnIsPosOK) {\n    posStart.G = 0;\n    var arrOpen = [posStart],\n        arrClose = [];\n\n    while (arrOpen.length > 0) {\n        var idxOfMinF = getMinFIndex(arrOpen, posEnd);\n        var curPos = arrOpen[idxOfMinF];\n        arrOpen.splice(idxOfMinF, 1);\n        arrClose.push(curPos);\n\n        if (posEnd.isEqual(curPos)) {\n            var arrResult = [curPos];\n            while (curPos.parent) {\n                arrResult.unshift(curPos.parent);\n                curPos = curPos.parent;\n            }\n            return arrResult;\n        }\n\n        var arrNeighbors = curPos.getNeighbors();\n        for (var i = 0; i < arrNeighbors.length; i++) {\n            var pos = arrNeighbors[i];\n            if (!fnIsPosOK(pos) || getIndexOfPos(arrClose, pos) >= 0) {\n                continue;\n            }\n\n            pos.G = curPos.G + pos.getG(curPos);\n            pos.parent = curPos;\n\n            var index = getIndexOfPos(arrOpen, pos);\n            if (index >= 0) {\n                if (pos.G < arrOpen[index].G) {\n                    arrOpen[index].G = pos.G;\n                    arrOpen[index].parent = curPos;\n                }\n            } else {\n                if (pos.getG(curPos) > 1) {\n                    if (!fnIsPosOK(createPos(pos.r, curPos.c)) && !fnIsPosOK(createPos(curPos.r, pos.c))) {\n                        continue;\n                    }\n                }\n                arrOpen.push(pos);\n            }\n        }\n    }\n}\n\nmodule.exports = AStar;\n\ncc._RFpop();","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"AStar\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '12ea8rLR19JoZjtDkt63E+v', 'AStar');\n// Script\\AStar.js\n\nvar Pos = require('pos');\n\nfunction createPos(r, c) {\n    return new Pos(r, c);\n}\n\nfunction getMinFIndex(arr, posEnd) {\n    var index = 0;\n    for (var i = 0; i < arr.length; i++) {\n        var F = arr[i].G + arr[i].getH(posEnd);\n        var minF = arr[index].G + arr[index].getH(posEnd);\n        if (F <= minF) {\n            index = i;\n        }\n    }\n\n    return index;\n}\n\nfunction getIndexOfPos(arr, pos) {\n    for (var i = 0; i < arr.length; i++) {\n        if (pos.isEqual(arr[i])) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\nfunction AStar(posStart, posEnd, fnIsPosOK) {\n    posStart.G = 0;\n    var arrOpen = [posStart],\n        arrClose = [];\n\n    while (arrOpen.length > 0) {\n        var idxOfMinF = getMinFIndex(arrOpen, posEnd);\n        var curPos = arrOpen[idxOfMinF];\n        arrOpen.splice(idxOfMinF, 1);\n        arrClose.push(curPos);\n\n        if (posEnd.isEqual(curPos)) {\n            var arrResult = [curPos];\n            while (curPos.parent) {\n                arrResult.unshift(curPos.parent);\n                curPos = curPos.parent;\n            }\n            return arrResult;\n        }\n\n        var arrNeighbors = curPos.getNeighbors();\n        for (var i = 0; i < arrNeighbors.length; i++) {\n            var pos = arrNeighbors[i];\n            if (!fnIsPosOK(pos) || getIndexOfPos(arrClose, pos) >= 0) {\n                continue;\n            }\n\n            pos.G = curPos.G + pos.getG(curPos);\n            pos.parent = curPos;\n\n            var index = getIndexOfPos(arrOpen, pos);\n            if (index >= 0) {\n                if (pos.G < arrOpen[index].G) {\n                    arrOpen[index].G = pos.G;\n                    arrOpen[index].parent = curPos;\n                }\n            } else {\n                if (pos.getG(curPos) > 1) {\n                    if (!fnIsPosOK(createPos(pos.r, curPos.c)) && !fnIsPosOK(createPos(curPos.r, pos.c))) {\n                        continue;\n                    }\n                }\n                arrOpen.push(pos);\n            }\n        }\n    }\n}\n\nmodule.exports = AStar;\n\ncc._RFpop();\n},{\"pos\":\"pos\"}],\"game\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '90ed8OJwjFFNaDwdnT9/3r0', 'game');\n// Script\\game.js\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        mainNode: cc.Node,\n        girdContainer: cc.Node,\n\n        wallPre: cc.Prefab,\n        roadPre: cc.Prefab,\n\n        hero: cc.Node,\n        target: cc.Node,\n\n        rowNum: 15,\n        colNum: 10,\n\n        arrIsWall: [cc.Boolean]\n\n    },\n\n    // foo: {\n    //    default: null,\n    //    url: cc.Texture2D,  // optional, default is typeof default\n    //    serializable: true, // optional, default is true\n    //    visible: true,      // optional, default is true\n    //    displayName: 'Foo', // optional\n    //    readonly: false,    // optional, default is false\n    // },\n    // ...\n    // use this for initialization\n    onLoad: function onLoad() {\n        var girdWidth = this.mainNode.width / this.colNum;\n        var girdHeight = this.mainNode.height / this.rowNum;\n\n        for (var i = 0; i < this.rowNum; i++) {\n            for (var j = 0; j < this.colNum; j++) {\n                var gird;\n                if (Math.random() * this.rowNum * this.colNum < wallNum) {\n                    gird = cc.instantiate(this.wallPre);\n                    this.arrIsWall.push(true);\n                } else {\n                    gird = cc.instantiate(this.roadPre);\n                    this.arrIsWall.push(false);\n                }\n                this.girdContainer.addChild(gird);\n                gird.setPosition(cc.p(girdWidth * j, girdHeight * i));\n            }\n        }\n\n        var randomR;\n        var randomC;\n\n        do {\n            randomR = Math.floor(Math.random() * this.rowNum);\n            randomC = Math.floor(Math.random() * this.colNum);\n        } while (this.isWallHere(randomR, randomC));\n        this.hero.setPosition(cc.p(girdWidth * randomC, girdHeight * randomR));\n        this.hero.getComponent('hero').game = this;\n\n        var isReachable;\n        do {\n            do {\n                randomR = Math.floor(Math.random() * this.rowNum);\n                randomC = Math.floor(Math.random() * this.colNum);\n            } while (this.isWallHere(randomR, randomC));\n            this.target.setPosition(cc.p(girdWidth * randomC, girdHeight * randomR));\n            isReachable = this.hero.getComponent('hero').canReach(this.target.getPosition());\n        } while (!isReachable);\n\n        this.onTouchEvent();\n    },\n\n    isWallHere: function isWallHere(row, col) {\n        return this.arrIsWall[row * this.colNum + col];\n    },\n\n    onTouchStart: function onTouchStart(event, touch) {},\n\n    onTouchMove: function onTouchMove(event, touch) {},\n\n    onTouchEnd: function onTouchEnd(event, touch) {\n        var location = event.touch.getLocation();\n        var pos = this.getComponent('game').mainNode.convertToNodeSpace(location);\n\n        this.getComponent('game').hero.getComponent('hero').goto(pos);\n    },\n\n    onTouchCancel: function onTouchCancel(event, touch) {},\n\n    onTouchEvent: function onTouchEvent() {\n        this.node.on('touchstart', this.onTouchStart, this.node);\n        this.node.on('touchmove', this.onTouchMove, this.node);\n        this.node.on('touchend', this.onTouchEnd, this.node);\n        this.node.on('touchcancel', this.onTouchCancel, this.node);\n    },\n\n    offAllTouchEvent: function offAllTouchEvent() {\n        this.node.off('touchstart', this.onTouchStart, this.node);\n        this.node.off('touchmove', this.onTouchMove, this.node);\n        this.node.off('touchend', this.onTouchEnd, this.node);\n        this.node.off('touchcancel', this.onTouchCancel, this.node);\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        var isOver = cc.rectIntersectsRect(this.hero.getBoundingBox(), this.target.getBoundingBox());\n        if (isOver) {\n            wallNum += 3;\n            if (wallNum > this.rowNum * this.colNum / 2) {\n                wallNum = 10;\n            } else {}\n            cc.director.loadScene('game');\n        }\n    }\n});\n\nvar wallNum = 10;\n\ncc._RFpop();\n},{}],\"hero\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, 'b7b5865CnFGbpcAxd9w3KTO', 'hero');\n// Script\\hero.js\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        game: cc.Component\n    },\n\n    // foo: {\n    //    default: null,\n    //    url: cc.Texture2D,  // optional, default is typeof default\n    //    serializable: true, // optional, default is true\n    //    visible: true,      // optional, default is true\n    //    displayName: 'Foo', // optional\n    //    readonly: false,    // optional, default is false\n    // },\n    // ...\n    // use this for initialization\n    onLoad: function onLoad() {},\n\n    getGirdPos: function getGirdPos(position) {\n        var w = this.game.mainNode.width / this.game.colNum;\n        var h = this.game.mainNode.height / this.game.rowNum;\n\n        var r = Math.floor(position.y / h);\n        var c = Math.floor(position.x / w);\n\n        var Pos = require('pos');\n        return new Pos(r, c);\n    },\n\n    getCCPos: function getCCPos(girdPos) {\n        var w = this.game.mainNode.width / this.game.colNum;\n        var h = this.game.mainNode.height / this.game.rowNum;\n\n        var x = Math.floor(girdPos.c * h);\n        var y = Math.floor(girdPos.r * w);\n\n        return cc.p(x, y);\n    },\n\n    goto: function goto(pos) {\n        this.node.stopAllActions();\n        var targetPos = this.getGirdPos(pos);\n        var startPos = this.getGirdPos(cc.p(this.node.x + 10, this.node.y + 10));\n\n        var AStar = require('AStar');\n        var game = this.game;\n        var path = AStar(startPos, targetPos, function (pos) {\n            if (pos.r < 0 || pos.c < 0 || pos.r >= game.rowNum || pos.c >= game.colNum) {\n                return false;\n            }\n\n            if (game.isWallHere(pos.r, pos.c)) {\n                return false;\n            }\n\n            return true;\n        });\n\n        console.log(path);\n        var self = this;\n        function act() {\n            if (path.length > 0) {\n                var gPos = path.shift();\n                var pos = self.getCCPos(gPos);\n                self.node.runAction(cc.sequence(cc.moveTo(0.25, pos), cc.callFunc(act)));\n            }\n        }\n\n        act();\n    },\n\n    canReach: function canReach(pos) {\n        var targetPos = this.getGirdPos(pos);\n        var startPos = this.getGirdPos(cc.p(this.node.x + 10, this.node.y + 10));\n\n        var AStar = require('AStar');\n        var game = this.game;\n        var path = AStar(startPos, targetPos, function (pos) {\n            if (pos.r < 0 || pos.c < 0 || pos.r >= game.rowNum || pos.c >= game.colNum) {\n                return false;\n            }\n\n            if (game.isWallHere(pos.r, pos.c)) {\n                return false;\n            }\n\n            return true;\n        });\n\n        return path;\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n\ncc._RFpop();\n},{\"AStar\":\"AStar\",\"pos\":\"pos\"}],\"pos\":[function(require,module,exports){\n\"use strict\";\ncc._RFpush(module, '9f7c9dxaXFPrYT5Laz/uutB', 'pos');\n// Script\\pos.js\n\nvar Pos = function Pos(r, c) {\n    this.r = r;\n    this.c = c;\n};\n\nPos.prototype.left = function () {\n    return new Pos(this.r, this.c - 1);\n};\n\nPos.prototype.right = function () {\n    return new Pos(this.r, this.c + 1);\n};\n\nPos.prototype.top = function () {\n    return new Pos(this.r - 1, this.c);\n};\n\nPos.prototype.bottom = function () {\n    return new Pos(this.r + 1, this.c);\n};\n\nPos.prototype.leftTop = function () {\n    return new Pos(this.r - 1, this.c - 1);\n};\n\nPos.prototype.leftBottom = function () {\n    return new Pos(this.r + 1, this.c - 1);\n};\n\nPos.prototype.rightTop = function () {\n    return new Pos(this.r - 1, this.c + 1);\n};\n\nPos.prototype.rightBottom = function () {\n    return new Pos(this.r + 1, this.c + 1);\n};\n\nPos.prototype.getNeighbors = function () {\n    return [this.left(), this.right(), this.top(), this.bottom(), this.leftTop(), this.leftBottom(), this.rightTop(), this.rightBottom()];\n};\n\nPos.prototype.getG = function (pos) {\n    var dis1 = Math.abs(this.r - pos.r),\n        dis2 = Math.abs(this.c - pos.c),\n        dis = Math.sqrt(dis1 * dis1 + dis2 * dis2),\n        dis = Math.round(dis * 10) / 10;\n    return dis;\n};\n\nPos.prototype.getH = function (pos) {\n    var dis1 = Math.abs(this.r - pos.r),\n        dis2 = Math.abs(this.c - pos.c);\n    return dis1 + dis2;\n};\n\nPos.prototype.isEqual = function (pos) {\n    return this.r === pos.r && this.c === pos.c;\n};\n\nPos.prototype.toString = function (first_argument) {\n    return this.r + ', ' + this.c;\n};\n\nfunction createPos(r, c) {\n    return new Pos(r, c);\n}\n\nmodule.exports = Pos;\n\ncc._RFpop();\n},{}]},{},[\"AStar\",\"pos\",\"hero\",\"game\"])\n\n","\"use strict\";\ncc._RFpush(module, '90ed8OJwjFFNaDwdnT9/3r0', 'game');\n// Script\\game.js\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        mainNode: cc.Node,\n        girdContainer: cc.Node,\n\n        wallPre: cc.Prefab,\n        roadPre: cc.Prefab,\n\n        hero: cc.Node,\n        target: cc.Node,\n\n        rowNum: 15,\n        colNum: 10,\n\n        arrIsWall: [cc.Boolean]\n\n    },\n\n    // foo: {\n    //    default: null,\n    //    url: cc.Texture2D,  // optional, default is typeof default\n    //    serializable: true, // optional, default is true\n    //    visible: true,      // optional, default is true\n    //    displayName: 'Foo', // optional\n    //    readonly: false,    // optional, default is false\n    // },\n    // ...\n    // use this for initialization\n    onLoad: function onLoad() {\n        var girdWidth = this.mainNode.width / this.colNum;\n        var girdHeight = this.mainNode.height / this.rowNum;\n\n        for (var i = 0; i < this.rowNum; i++) {\n            for (var j = 0; j < this.colNum; j++) {\n                var gird;\n                if (Math.random() * this.rowNum * this.colNum < wallNum) {\n                    gird = cc.instantiate(this.wallPre);\n                    this.arrIsWall.push(true);\n                } else {\n                    gird = cc.instantiate(this.roadPre);\n                    this.arrIsWall.push(false);\n                }\n                this.girdContainer.addChild(gird);\n                gird.setPosition(cc.p(girdWidth * j, girdHeight * i));\n            }\n        }\n\n        var randomR;\n        var randomC;\n\n        do {\n            randomR = Math.floor(Math.random() * this.rowNum);\n            randomC = Math.floor(Math.random() * this.colNum);\n        } while (this.isWallHere(randomR, randomC));\n        this.hero.setPosition(cc.p(girdWidth * randomC, girdHeight * randomR));\n        this.hero.getComponent('hero').game = this;\n\n        var isReachable;\n        do {\n            do {\n                randomR = Math.floor(Math.random() * this.rowNum);\n                randomC = Math.floor(Math.random() * this.colNum);\n            } while (this.isWallHere(randomR, randomC));\n            this.target.setPosition(cc.p(girdWidth * randomC, girdHeight * randomR));\n            isReachable = this.hero.getComponent('hero').canReach(this.target.getPosition());\n        } while (!isReachable);\n\n        this.onTouchEvent();\n    },\n\n    isWallHere: function isWallHere(row, col) {\n        return this.arrIsWall[row * this.colNum + col];\n    },\n\n    onTouchStart: function onTouchStart(event, touch) {},\n\n    onTouchMove: function onTouchMove(event, touch) {},\n\n    onTouchEnd: function onTouchEnd(event, touch) {\n        var location = event.touch.getLocation();\n        var pos = this.getComponent('game').mainNode.convertToNodeSpace(location);\n\n        this.getComponent('game').hero.getComponent('hero').goto(pos);\n    },\n\n    onTouchCancel: function onTouchCancel(event, touch) {},\n\n    onTouchEvent: function onTouchEvent() {\n        this.node.on('touchstart', this.onTouchStart, this.node);\n        this.node.on('touchmove', this.onTouchMove, this.node);\n        this.node.on('touchend', this.onTouchEnd, this.node);\n        this.node.on('touchcancel', this.onTouchCancel, this.node);\n    },\n\n    offAllTouchEvent: function offAllTouchEvent() {\n        this.node.off('touchstart', this.onTouchStart, this.node);\n        this.node.off('touchmove', this.onTouchMove, this.node);\n        this.node.off('touchend', this.onTouchEnd, this.node);\n        this.node.off('touchcancel', this.onTouchCancel, this.node);\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    update: function update(dt) {\n        var isOver = cc.rectIntersectsRect(this.hero.getBoundingBox(), this.target.getBoundingBox());\n        if (isOver) {\n            wallNum += 3;\n            if (wallNum > this.rowNum * this.colNum / 2) {\n                wallNum = 10;\n            } else {}\n            cc.director.loadScene('game');\n        }\n    }\n});\n\nvar wallNum = 10;\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, 'b7b5865CnFGbpcAxd9w3KTO', 'hero');\n// Script\\hero.js\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        game: cc.Component\n    },\n\n    // foo: {\n    //    default: null,\n    //    url: cc.Texture2D,  // optional, default is typeof default\n    //    serializable: true, // optional, default is true\n    //    visible: true,      // optional, default is true\n    //    displayName: 'Foo', // optional\n    //    readonly: false,    // optional, default is false\n    // },\n    // ...\n    // use this for initialization\n    onLoad: function onLoad() {},\n\n    getGirdPos: function getGirdPos(position) {\n        var w = this.game.mainNode.width / this.game.colNum;\n        var h = this.game.mainNode.height / this.game.rowNum;\n\n        var r = Math.floor(position.y / h);\n        var c = Math.floor(position.x / w);\n\n        var Pos = require('pos');\n        return new Pos(r, c);\n    },\n\n    getCCPos: function getCCPos(girdPos) {\n        var w = this.game.mainNode.width / this.game.colNum;\n        var h = this.game.mainNode.height / this.game.rowNum;\n\n        var x = Math.floor(girdPos.c * h);\n        var y = Math.floor(girdPos.r * w);\n\n        return cc.p(x, y);\n    },\n\n    goto: function goto(pos) {\n        this.node.stopAllActions();\n        var targetPos = this.getGirdPos(pos);\n        var startPos = this.getGirdPos(cc.p(this.node.x + 10, this.node.y + 10));\n\n        var AStar = require('AStar');\n        var game = this.game;\n        var path = AStar(startPos, targetPos, function (pos) {\n            if (pos.r < 0 || pos.c < 0 || pos.r >= game.rowNum || pos.c >= game.colNum) {\n                return false;\n            }\n\n            if (game.isWallHere(pos.r, pos.c)) {\n                return false;\n            }\n\n            return true;\n        });\n\n        console.log(path);\n        var self = this;\n        function act() {\n            if (path.length > 0) {\n                var gPos = path.shift();\n                var pos = self.getCCPos(gPos);\n                self.node.runAction(cc.sequence(cc.moveTo(0.25, pos), cc.callFunc(act)));\n            }\n        }\n\n        act();\n    },\n\n    canReach: function canReach(pos) {\n        var targetPos = this.getGirdPos(pos);\n        var startPos = this.getGirdPos(cc.p(this.node.x + 10, this.node.y + 10));\n\n        var AStar = require('AStar');\n        var game = this.game;\n        var path = AStar(startPos, targetPos, function (pos) {\n            if (pos.r < 0 || pos.c < 0 || pos.r >= game.rowNum || pos.c >= game.colNum) {\n                return false;\n            }\n\n            if (game.isWallHere(pos.r, pos.c)) {\n                return false;\n            }\n\n            return true;\n        });\n\n        return path;\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n\ncc._RFpop();","\"use strict\";\ncc._RFpush(module, '9f7c9dxaXFPrYT5Laz/uutB', 'pos');\n// Script\\pos.js\n\nvar Pos = function Pos(r, c) {\n    this.r = r;\n    this.c = c;\n};\n\nPos.prototype.left = function () {\n    return new Pos(this.r, this.c - 1);\n};\n\nPos.prototype.right = function () {\n    return new Pos(this.r, this.c + 1);\n};\n\nPos.prototype.top = function () {\n    return new Pos(this.r - 1, this.c);\n};\n\nPos.prototype.bottom = function () {\n    return new Pos(this.r + 1, this.c);\n};\n\nPos.prototype.leftTop = function () {\n    return new Pos(this.r - 1, this.c - 1);\n};\n\nPos.prototype.leftBottom = function () {\n    return new Pos(this.r + 1, this.c - 1);\n};\n\nPos.prototype.rightTop = function () {\n    return new Pos(this.r - 1, this.c + 1);\n};\n\nPos.prototype.rightBottom = function () {\n    return new Pos(this.r + 1, this.c + 1);\n};\n\nPos.prototype.getNeighbors = function () {\n    return [this.left(), this.right(), this.top(), this.bottom(), this.leftTop(), this.leftBottom(), this.rightTop(), this.rightBottom()];\n};\n\nPos.prototype.getG = function (pos) {\n    var dis1 = Math.abs(this.r - pos.r),\n        dis2 = Math.abs(this.c - pos.c),\n        dis = Math.sqrt(dis1 * dis1 + dis2 * dis2),\n        dis = Math.round(dis * 10) / 10;\n    return dis;\n};\n\nPos.prototype.getH = function (pos) {\n    var dis1 = Math.abs(this.r - pos.r),\n        dis2 = Math.abs(this.c - pos.c);\n    return dis1 + dis2;\n};\n\nPos.prototype.isEqual = function (pos) {\n    return this.r === pos.r && this.c === pos.c;\n};\n\nPos.prototype.toString = function (first_argument) {\n    return this.r + ', ' + this.c;\n};\n\nfunction createPos(r, c) {\n    return new Pos(r, c);\n}\n\nmodule.exports = Pos;\n\ncc._RFpop();"],"sourceRoot":"/source/"}