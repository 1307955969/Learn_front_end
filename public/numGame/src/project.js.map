{"version":3,"sources":["project.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","game","module","cc","_RFpush","Class","extends","Component","properties","rowCount","colCount","layGame","default","type","Node","patterns","visible","patternPre","Prefab","curNode","saveNode","curScoreLabel","Label","bestScoreLabel","gameOverNode","curScore","notify","oldScore","this","string","hasCount","oldCount","console","log","gameOver","initGameLayout","getContentSize","c","createPatternAtIndex","index","pattern","instantiate","setPosition","getPosByIndex","getComponent","init","addChild","createNewPattern","level","self","comp","temp","Math","floor","rand","movePattern","pos","getPosition","worldPos","getParent","convertToWorldSpaceAR","posInGame","convertToNodeSpaceAR","getIndexByPos","oldPattern","oldPatternLevel","p","offAllTouchEvent","removeFromParent","mergeLogic","getSameLevelIndex","indexes","isSame","newIndex","tempLevel","indexOf","push","rowIndex","colIndex","j","runAction","sequence","moveTo","removeSelf","size","gameSize","x","width","y","height","posStart","isGameOver","active","sys","localStorage","getItem","setItem","replay","director","loadScene","onLoad","_RFpop","bgColors","Color","oldLevel","updateUI","labelNum","onTouchEvent","node","activeInHierarchy","color","toString","onTouchStart","event","touch","location","getLocation","onTouchMove","onTouchEnd","onTouchCancel","setContentSize","start","on","off","welcome","onBtnPlay"],"mappings":"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","file":"project.js","sourcesContent":["require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({\"game\":[function(require,module,exports){\ncc._RFpush(module, 'f5284+iF/9OhImniyUWVxNI', 'game');\n// game.js\n\n'use strict';\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        rowCount: 0,\n        colCount: 0,\n\n        layGame: {\n            'default': null,\n            type: cc.Node\n        },\n\n        patterns: {\n            'default': [],\n            type: [cc.Node],\n            visible: false\n        },\n\n        patternPre: {\n            'default': null,\n            type: cc.Prefab\n        },\n\n        curNode: {\n            'default': null,\n            type: cc.Node\n        },\n\n        saveNode: {\n            'default': null,\n            type: cc.Node\n        },\n\n        curScoreLabel: {\n            'default': null,\n            type: cc.Label\n        },\n\n        bestScoreLabel: {\n            'default': null,\n            type: cc.Label\n        },\n\n        gameOverNode: {\n            'default': null,\n            type: cc.Node\n        },\n\n        curScore: {\n            'default': 0,\n            visible: false,\n            notify: function notify(oldScore) {\n                if (oldScore !== this.curScore) {\n                    this.curScoreLabel.string = this.curScore;\n                }\n            }\n        },\n\n        hasCount: {\n            'default': 0,\n            visible: false,\n            notify: function notify(oldCount) {\n                if (oldCount !== this.hasCount) {\n                    console.log('已经有数字的格子数 ' + this.hasCount);\n                    if (this.hasCount === this.rowCount * this.colCount) {\n                        this.gameOver();\n                    }\n                }\n            }\n        }\n    },\n\n    initGameLayout: function initGameLayout() {\n        this.patterns = [];\n        var size = this.layGame.getContentSize();\n        for (var r = 0; r < this.rowCount; r++) {\n            for (var c = 0; c < this.colCount; c++) {\n                this.createPatternAtIndex(r * this.colCount + c);\n            }\n        }\n    },\n\n    createPatternAtIndex: function createPatternAtIndex(index) {\n        var pattern = cc.instantiate(this.patternPre);\n        pattern.setPosition(this.getPosByIndex(index));\n        pattern.getComponent('pattern').init(0);\n\n        this.patterns[index] = pattern;\n        this.layGame.addChild(pattern);\n    },\n\n    createNewPattern: function createNewPattern() {\n        var self = this;\n\n        var pattern = cc.instantiate(self.patternPre);\n        var comp = pattern.getComponent('pattern');\n        var temp = Math.floor(cc.rand() % 1000);\n        var level;\n        if (temp < 600) {\n            level = 1;\n        } else if (temp < 950) {\n            level = 3;\n        } else {\n            level = 9;\n        }\n\n        comp.init(level, this);\n        self.curNode.addChild(pattern);\n    },\n\n    movePattern: function movePattern(pattern) {\n        var pos = pattern.getPosition();\n        var worldPos = pattern.getParent().convertToWorldSpaceAR(pos);\n        var posInGame = this.layGame.convertToNodeSpaceAR(worldPos);\n\n        var index = this.getIndexByPos(posInGame);\n        if (index !== null) {\n            var oldPattern = this.patterns[index];\n            var oldPatternLevel = oldPattern.getComponent('pattern').level;\n            if (oldPatternLevel > 0) {\n                pattern.setPosition(cc.p(0, 0));\n                return;\n            }\n\n            pattern.getComponent('pattern').offAllTouchEvent();\n            pattern.removeFromParent();\n            this.layGame.addChild(pattern);\n            pattern.setPosition(this.getPosByIndex(index));\n\n            this.patterns[index].removeFromParent();\n            this.patterns[index] = pattern;\n\n            this.createNewPattern();\n\n            if (this.mergeLogic(index)) {} else {\n                this.curScore += pattern.getComponent('pattern').level;\n            }\n\n            this.hasCount += 1;\n        } else {\n            pattern.setPosition(cc.p(0, 0));\n        }\n    },\n\n    getSameLevelIndex: function getSameLevelIndex(index, indexes) {\n        var rowIndex = Math.floor(index / this.colCount);\n        var colIndex = index - rowIndex * this.colCount;\n\n        var pattern = this.patterns[index];\n        var level = pattern.getComponent('pattern').level;\n\n        var self = this;\n\n        function isSame(newIndex) {\n            var p = self.patterns[newIndex];\n            var tempLevel = p.getComponent('pattern').level;\n            // 级别相等且没有在indexes中\n            if (tempLevel === level && indexes.indexOf(newIndex) === -1) {\n                indexes.push(newIndex);\n                return true;\n            }\n\n            return false;\n        }\n\n        if (rowIndex + 1 < this.rowCount) {\n            var newIndex = index + this.colCount;\n\n            if (isSame(newIndex)) {\n                this.getSameLevelIndex(newIndex, indexes);\n            }\n        }\n\n        if (colIndex + 1 < this.colCount) {\n            var newIndex = index + 1;\n\n            if (isSame(newIndex)) {\n                this.getSameLevelIndex(newIndex, indexes);\n            }\n        }\n\n        if (rowIndex - 1 >= 0) {\n            var newIndex = index - this.colCount;\n\n            if (isSame(newIndex)) {\n                this.getSameLevelIndex(newIndex, indexes);\n            }\n        }\n\n        if (colIndex - 1 >= 0) {\n            var newIndex = index - 1;\n\n            if (isSame(newIndex)) {\n                this.getSameLevelIndex(newIndex, indexes);\n            }\n        }\n\n        return;\n    },\n\n    mergeLogic: function mergeLogic(index) {\n        var indexes = [index];\n        this.getSameLevelIndex(index, indexes);\n        console.log('等级相同的格子indexes ' + indexes);\n\n        var pattern = this.patterns[index];\n        var level = pattern.getComponent('pattern').level;\n\n        if (indexes.length < 3) {\n            return false;\n        }\n\n        var pos = pattern.getPosition();\n        pattern.getComponent('pattern').level = level * indexes.length;\n\n        this.curScore += level * indexes.length;\n        this.hasCount -= indexes.length - 1;\n\n        for (var i = indexes.length - 1; i >= 0; i--) {\n            var j = indexes[i];\n\n            if (j === index) {\n                continue;\n            }\n\n            var p = this.patterns[j];\n\n            p.runAction(cc.sequence(cc.moveTo(0.2, pos), cc.removeSelf()));\n\n            this.createPatternAtIndex(j);\n        };\n\n        this.mergeLogic(index);\n\n        return true;\n    },\n\n    getPosByIndex: function getPosByIndex(index) {\n        var rowIndex = Math.floor(index / this.colCount);\n        var colIndex = index - rowIndex * this.colCount;\n\n        var size = this.gameSize;\n        var x = -size.width / 2 + (colIndex + 0.5) * size.width / this.colCount;\n        var y = -size.height / 2 + (rowIndex + 0.5) * size.height / this.rowCount;\n\n        return cc.p(x, y);\n    },\n\n    getIndexByPos: function getIndexByPos(posInGame) {\n        var width = this.gameSize.width;\n        var height = this.gameSize.height;\n        var colIndex = (posInGame.x - this.posStart.x) / (width / this.colCount);\n        var rowIndex = (posInGame.y - this.posStart.y) / (height / this.rowCount);\n\n        colIndex = Math.floor(colIndex + 0.5);\n        rowIndex = Math.floor(rowIndex + 0.5);\n\n        if (rowIndex < 0 || rowIndex > this.rowCount - 1 || colIndex < 0 || colIndex > this.colCount - 1) {\n            return null;\n        }\n\n        return rowIndex * this.colCount + colIndex;\n    },\n\n    isGameOver: function isGameOver() {\n        return this.hasCount === this.rowCount + this.colCount;\n    },\n\n    gameOver: function gameOver() {\n        console.log('game is over');\n        this.gameOverNode.active = true;\n\n        if (this.curScore > cc.sys.localStorage.getItem('bestScore')) {\n            cc.sys.localStorage.setItem('bestScore', this.curScore);\n        }\n    },\n\n    replay: function replay() {\n        cc.director.loadScene('game');\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.gameSize = this.layGame.getContentSize();\n        var width = this.gameSize.width;\n        var height = this.gameSize.height;\n        this.posStart = cc.p(-width / 2 + 0.5 * width / this.colCount, -height / 2 + 0.5 * height / this.rowCount);\n\n        this.hasCount = 0;\n\n        this.initGameLayout();\n        this.createNewPattern();\n\n        if (cc.sys.localStorage.getItem(\"bestScore\") !== '') {} else {\n            cc.sys.localStorage.setItem('bestScore', 0);\n        }\n\n        this.bestScoreLabel.string = cc.sys.localStorage.getItem('bestScore');\n    }\n\n});\n// called every frame, uncomment this function to activate update callback\n// update: function (dt) {\n\n// },\n\ncc._RFpop();\n},{}],\"pattern\":[function(require,module,exports){\ncc._RFpush(module, '32e0ftbsJxGUKjCQllLr5l8', 'pattern');\n// pattern.js\n\n'use strict';\n\nvar bgColors = [new cc.Color(0x4b, 0x4b, 0x4b), new cc.Color(0x00, 0x62, 0x0c), new cc.Color(0x00, 0x3d, 0xc7), new cc.Color(0xa1, 0x15, 0xb6), new cc.Color(0xfe, 0x4a, 0x00), new cc.Color(0xb3, 0x06, 0x06), new cc.Color(0xb3, 0x06, 0x06)];\n\nvar fontColors = [cc.Color(200, 200, 200, 255)];\n\n// g_QulityColor = {ccc3(0x4b,0x4b,0x4b),\n//     ccc3(0x4b,0x4b,0x4b),\n//     ccc3(0x00,0x62,0x0c),\n//     ccc3(0x00,0x3d,0xc7),\n//     ccc3(0xa1,0x15,0xb6),\n//     ccc3(0xfe,0x4a,0x00),\n//     ccc3(0xb3,0x06,0x06),      -- 新添加红色\n// }\n// -- 较亮的配色，个别地方使用\n// g_QulityColor2 = {ccc3(0xdb,0xdb,0xdb),\n//     ccc3(0xdb,0xdb,0xdb),\n//     ccc3(0x4d,0xec,0x15),\n//     ccc3(0x1f,0xd7,0xff),\n//     ccc3(0xee,0x46,0xec),\n//     ccc3(0xff,0x96,0x00),\n//     ccc3(0xff,0x30,0x1b),      -- 新添加红色\n// }\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        level: {\n            'default': 0,\n            notify: function notify(oldLevel) {\n                if (oldLevel !== this.level) {\n                    this.updateUI();\n                }\n            }\n        },\n\n        labelNum: {\n            'default': null,\n            type: cc.Label\n        }\n    },\n\n    init: function init(level, game) {\n        this.level = level;\n\n        if (game) {\n            this.game = game;\n            this.onTouchEvent();\n        }\n    },\n\n    updateUI: function updateUI() {\n        if (!this.node.activeInHierarchy) {\n            return;\n        }\n\n        if (this.level > 0) {\n            console.log('这次生成的方块等级为--' + this.level);\n            this.node.color = new cc.Color(237, 224, 200);\n            this.labelNum.string = this.level.toString();\n\n            if (!this.labelNum.node.activeInHierarchy) {\n                return;\n            }\n\n            if (this.level < 3) {\n                this.labelNum.node.color = bgColors[0];\n            } else if (this.level < 9) {\n                this.labelNum.node.color = bgColors[1];\n            } else if (this.level < 27) {\n                this.labelNum.node.color = bgColors[2];\n            } else if (this.level < 81) {\n                this.labelNum.node.color = bgColors[3];\n            } else if (this.level < 243) {\n                this.labelNum.node.color = bgColors[4];\n            } else if (this.level < 729) {\n                this.labelNum.node.color = bgColors[5];\n            } else {\n                this.labelNum.node.color = bgColors[6];\n            }\n        } else {\n            console.log('默认的空白方块');\n            this.node.color = new cc.Color(205, 193, 180, 255);\n            this.labelNum.string = ' ';\n        }\n    },\n\n    onTouchStart: function onTouchStart(event, touch) {\n        var location = event.touch.getLocation();\n        var pos = this.getParent().convertToNodeSpaceAR(location);\n        this.setPosition(pos);\n    },\n\n    onTouchMove: function onTouchMove(event, touch) {\n        var location = event.touch.getLocation();\n        var pos = this.getParent().convertToNodeSpaceAR(location);\n        this.setPosition(pos);\n    },\n\n    onTouchEnd: function onTouchEnd(event, touch) {\n        var location = event.touch.getLocation();\n        var pos = this.getParent().convertToNodeSpaceAR(location);\n\n        this.getComponent('pattern').game.movePattern(this);\n    },\n\n    onTouchCancel: function onTouchCancel(event, touch) {\n        var location = event.touch.getLocation();\n        var pos = this.getParent().convertToNodeSpaceAR(location);\n\n        this.getComponent('pattern').game.movePattern(this);\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {\n        this.labelNum.node.setContentSize(130, 130);\n        this.updateUI();\n    },\n\n    start: function start() {\n        this.updateUI();\n    },\n\n    onTouchEvent: function onTouchEvent() {\n        this.node.on('touchstart', this.onTouchStart, this.node);\n        this.node.on('touchmove', this.onTouchMove, this.node);\n        this.node.on('touchend', this.onTouchEnd, this.node);\n        this.node.on('touchcancel', this.onTouchCancel, this.node);\n    },\n\n    offAllTouchEvent: function offAllTouchEvent() {\n        this.node.off('touchstart', this.onTouchStart, this.node);\n        this.node.off('touchmove', this.onTouchMove, this.node);\n        this.node.off('touchend', this.onTouchEnd, this.node);\n        this.node.off('touchcancel', this.onTouchCancel, this.node);\n    }\n\n});\n// called every frame, uncomment this function to activate update callback\n// update: function (dt) {\n\n// },\n\ncc._RFpop();\n},{}],\"welcome\":[function(require,module,exports){\ncc._RFpush(module, 'f630cJjMZNAFrcKsvgXqKOO', 'welcome');\n// welcome.js\n\n'use strict';\n\ncc.Class({\n    'extends': cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function onLoad() {},\n\n    onBtnPlay: function onBtnPlay() {\n        cc.director.loadScene('game');\n    }\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n\ncc._RFpop();\n},{}]},{},[\"pattern\",\"game\",\"welcome\"]);\n"],"sourceRoot":"/source/"}